import 'package:the_boost/features/auth/presentation/pages/land/domain/entities/land.dart';

class LandModel extends Land {
  const LandModel({
    required String id,
    required String title,
    required String description,
    required String location,
    required double surface,
    required int totalTokens,
    required String pricePerToken,
    required String ownerId,
    required String ownerAddress,
    required String status,
    required String landtype,
    required List<String> ipfsCIDs,
    required List<String> imageCIDs,
    required String blockchainTxHash,
    required String blockchainLandId,
    required List<dynamic> validations,
    required List<List<dynamic>> amenities,
    required bool isTokenized,
    required int availableTokens,
    required List<String> tokenIds,
    required List<dynamic> tokenizationAttempts,
    required DateTime createdAt,
    required DateTime updatedAt,
    required BlockchainDetails blockchainDetails,
    required ValidationProgress validationProgress,
  }) : super(
          id: id,
          title: title,
          description: description,
          location: location,
          surface: surface,
          totalTokens: totalTokens,
          pricePerToken: pricePerToken,
          ownerId: ownerId,
          ownerAddress: ownerAddress,
          status: status,
          landtype: landtype,
          ipfsCIDs: ipfsCIDs,
          imageCIDs: imageCIDs,
          blockchainTxHash: blockchainTxHash,
          blockchainLandId: blockchainLandId,
          validations: validations,
          amenities: amenities,
          isTokenized: isTokenized,
          availableTokens: availableTokens,
          tokenIds: tokenIds,
          tokenizationAttempts: tokenizationAttempts,
          createdAt: createdAt,
          updatedAt: updatedAt,
          blockchainDetails: blockchainDetails,
          validationProgress: validationProgress,
        );

  factory LandModel.fromJson(Map<String, dynamic> json) {
    return LandModel(
      id: json['_id'] ?? '',
      title: json['title'] ?? '',
      description: json['description'] ?? '',
      location: json['location'] ?? '',
      surface: (json['surface'] ?? 0).toDouble(),
      totalTokens: json['totalTokens'] ?? 0,
      pricePerToken: json['pricePerToken']?.toString() ?? '0',
      ownerId: json['ownerId'] ?? '',
      ownerAddress: json['ownerAddress'] ?? '',
      status: json['status'] ?? '',
      landtype: json['landtype'] ?? '',
      ipfsCIDs: List<String>.from(json['ipfsCIDs'] ?? []),
      imageCIDs: List<String>.from(json['imageCIDs'] ?? []),
      blockchainTxHash: json['blockchainTxHash'] ?? '',
      blockchainLandId: json['blockchainLandId'] ?? '',
      validations: json['validations'] ?? [],
      amenities: List<List<dynamic>>.from(json['amenities'] ?? []),
      isTokenized: json['isTokenized'] ?? false,
      availableTokens: json['availableTokens'] ?? 0,
      tokenIds: List<String>.from(json['tokenIds'] ?? []),
      tokenizationAttempts: json['tokenizationAttempts'] ?? [],
      createdAt:
          DateTime.parse(json['createdAt'] ?? DateTime.now().toIso8601String()),
      updatedAt:
          DateTime.parse(json['updatedAt'] ?? DateTime.now().toIso8601String()),
      blockchainDetails:
          BlockchainDetails.fromJson(json['blockchainDetails'] ?? {}),
      validationProgress:
          ValidationProgress.fromJson(json['validationProgress'] ?? {}),
    );
  }

  Map<String, dynamic> toJson() {
    return {
      '_id': id,
      'title': title,
      'description': description,
      'location': location,
      'surface': surface,
      'totalTokens': totalTokens,
      'pricePerToken': pricePerToken,
      'ownerId': ownerId,
      'ownerAddress': ownerAddress,
      'status': status,
      'landtype': landtype,
      'ipfsCIDs': ipfsCIDs,
      'imageCIDs': imageCIDs,
      'blockchainTxHash': blockchainTxHash,
      'blockchainLandId': blockchainLandId,
      'validations': validations,
      'amenities': amenities,
      'isTokenized': isTokenized,
      'availableTokens': availableTokens,
      'tokenIds': tokenIds,
      'tokenizationAttempts': tokenizationAttempts,
      'createdAt': createdAt.toIso8601String(),
      'updatedAt': updatedAt.toIso8601String(),
      'blockchainDetails': blockchainDetails.toJson(),
      'validationProgress': validationProgress.toJson(),
    };
  }
}
